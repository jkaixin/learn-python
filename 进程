
多进程
    
    进程间通信
    Process 之前肯定是需要通信的，操作系统提供了很多机制来实现进程间的通信。
    Python 的multiprocessing 模块包装了底层的机制，提供了Queue、Pipes等多种方式来交换数据。
    
    进程通信（IPC，InterProcess Communication）是进程进行通信和同步的机制
    
    IPC 提供两个基本操作：
    1、发送（send message）
    2、接收（receive message）
    
    进程通信流程：
    1、在通信进程之间 建立通信链路
    2、通过send/receive交换信息
    
    阻塞通信（同步）和非阻塞通信（异步）
        同步通信：
        阻塞发送/接收：发送者发送消息/接收者请求接收信息后进入等待（阻塞）知道接收接收成功/直到成功接收一条消息
        
        异步通信：
        阻塞发送/接收：发送者发送消息/接收者请求接收信息后，可立即进行其他操作
        
    通信链路缓冲：
        1、0容量：发送方必须等待接收
        2、有限容量：缓冲列队满，发送方必须等待
        3、无限容量：发送方不需要等待
        
    4种进程通信方式详解：
        从简单到复杂：
        1、管道(pipe)
            普通管道 PIPE：通常有两种限制，一是单工，只能单向传输；二是只能在父子或者兄弟进程间使用；
            
            流管道 s_pipe：去除了第一种限制，为半双工，只能在父子或者兄弟进程间使用，可以双向传输；
            
            命名管道 name_pipe：去除了第2种限制，可以在许多并不相关的进程之间进行通讯。
         
         2、信号量（semophore）
            信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它通常作为一种锁机制，防止某个进程正在访问共享资源时，
            其他进程也访问该资源。因此，主要作为进程间以及同一进程之间的同步手段；
            
         3、消息列队（message queue）
            消息列队是有消息的链表，存放在内核中并有消息队列标识符标识。消息列队克服了信号传递信息少、管道只能承载无格式字节流以及缓冲
            区大小受限的缺点；
            
         4、信号（sinal）
            信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生；
            
         5、共享内存（shared memory）
            共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的IPC方式，
            它是针对其他进程进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号，配合使用，来实现进程间的同步和通信；
            
         6、套接字（socket）
            套解口也是一种进程间通信机制，与其他通信机制不同的是，它可以用于不同机器间的进程通信。
            
        
