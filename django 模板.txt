
    Django需要一种很便利的方法以动态地生成HTML。最常见的做法是使用模板。模板包含HTML输出的静态部分，以及一些特殊的语法，描述如何将动态内容
插入。

    Django 项目可以配置一个或多个模板引擎（甚至是零个，如果不使用模板）。Django 的模板系统自带内建的后台 -- Django 模板语言(DTL)，以及另外
一种流行的Jinja2.其他的模板语言的后端，可查找第三方库。

    支持模板引擎
    
    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [os.path.join(BASE_DIR,'templates')],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    
    ]
    
    BACKEND 内置的后端还有：django.template.backends.jinja2.Jinja2。
    由于绝大多数引擎都是从文件加载模板的，所以每种模板引擎都包含两项通用设置：
    · DIRS 定义了一个目录列表，模板引擎按照列表顺序搜索这些目录以查找模板源文件；    
    · APP_DIRS 告诉模板引擎是否应该进入每个已安装的应用中查找模板。每种模板引擎后端都定义了一个惯用的名称作为应用内部存放模板的子目录名称
      django为它自己的模板引擎指定是'templates'，为jinja2指定的名字是'jinja2'
      
    Django模板语言
        模板是由context来进行渲染的。渲染的过程是用在context中找到的值来替换模板中相应的变量，并执行相关tag。其他一切都按原样输出。
        
        Django 模板语言的语法包括4个结构。
        
        变量
        
        变量的值来自context中的输出，这类似于字典对象的keys到values的映射关系。
        变量是被{{ }} 括起来的部分，例如：
        My first name is {{ first_name}}.
        
        标签
        
        标签在渲染的过程中提供任意的逻辑。
        
        Tags 是由{% %}来定义的，例如
            {% csrf_token %}
        大部分标签都接收参数{% cycle 'odd' 'even' %}
        
        部分标签要求使用起始和闭合标签:
            {% if user.is_authenticated %}Hello,{{user.name}} {% endif %}
            
        常用的内置的模板标签
            autoescape
            控制自动转义是否可用，这种标签带有任何 on 或 off 作为参数的话，他将决定转义块内效果。该标签以一个endautoescape作为结束标签。
            
            block
            block标签可以被子模板覆盖；
            
            csrf_token
            这个标签用于跨站请求伪造保护
            
            cycle
            每当这个标签被访问，则传出一个它的可迭代参数的元素。第一次访问返回第一个元素，第二次返回地二个，以此类推，一旦所有元素都被访问过了
            就会重新开始，一直重复下去
            
            
            
        
        
